---
- name: Kubernetes Apps | Lay Down CoreDNS templates
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/{{ item.file }}"
    mode: 0644
  loop:
    - { name: coredns, file: coredns-clusterrole.yml, type: clusterrole }
    - { name: coredns, file: coredns-clusterrolebinding.yml, type: clusterrolebinding }
    - { name: coredns, file: coredns-config.yml, type: configmap }
    - { name: coredns, file: coredns-deployment.yml, type: deployment }
    - { name: coredns, file: coredns-sa.yml, type: sa }
    - { name: coredns, file: coredns-svc.yml, type: svc }
    - { name: dns-autoscaler, file: dns-autoscaler.yml, type: deployment }
    - { name: dns-autoscaler, file: dns-autoscaler-clusterrole.yml, type: clusterrole }
    - { name: dns-autoscaler, file: dns-autoscaler-clusterrolebinding.yml, type: clusterrolebinding }
    - { name: coredns, file: coredns-poddisruptionbudget.yml, type: poddisruptionbudget, condition: coredns_pod_disruption_budget }
    - { name: dns-autoscaler, file: dns-autoscaler-sa.yml, type: sa }
  register: coredns_manifests
  when:
    - dns_mode in ['coredns', 'coredns_dual']
    - inventory_hostname == groups['kube_control_plane'][0]
    - enable_dns_autoscaler or item.name != 'dns-autoscaler'
    - item.condition | default(True)
  tags:
    - coredns
